server.port=8080
spring.application.name=api-gateway
spring.cloud.discovery.enabled=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#In some cases, it is preferable for Eureka to advertise the IP addresses of services rather than the hostname.
# This can be done by settinh eureka.instance.preferIpAddress to true and, 
# when the application registers with eureka, it uses its IP address rather than its hostname.
eureka.client.instance.preferIpAddress=true
# The logging level can be one  TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF.
# The root logger can be configured using logging.level.root.
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE
############# You need these properties to avoid getting the cors error
spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
################ Discover Server #####################
#  route id
spring.cloud.gateway.routes[0].id=discovery-server
#  route uri
spring.cloud.gateway.routes[0].uri=http://localhost:8761
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/
####### product-service #######
spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082/
# If you want to enable load balancing, it can be  written as follows:
## spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**
## We are applying the filter to the product-service route
spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter
####### inventory-service #######
spring.cloud.gateway.routes[2].id=inventory-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083/
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/inventory/**
## registering the Auth service with the API Gateway
####### inventory-service #######
spring.cloud.gateway.routes[3].id=auth-service
spring.cloud.gateway.routes[3].uri=http://localhost:8090/
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/auth/**

