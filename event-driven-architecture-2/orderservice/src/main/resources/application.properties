server.port=8082
# Database Settings
spring.datasource.url=jdbc:postgresql://localhost:5432/orderservice_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
# when using @Slf4j, you need to add the following to show the logs in the terminal
logging.level.com=INFO
######################## Producer orderdto   ########################
spring.kafka.producer.bootstrap-servers:localhost:9092
spring.kafka.producer.key-serializer:org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer:org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=order:com.esi.orderservice.model.Order
spring.kafka.producer.properties.spring.json.type.mapping=orderdto:com.esi.orderservice.dto.OrderDto
######################## Consumer orderdto   ########################
spring.kafka.consumer.bootstrap-servers:localhost:9092
spring.kafka.consumer.group-id:orderPaymentGroup
spring.kafka.consumer.auto-offset-reset:earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# "order" is a random token word that need to be shared between the two bindings
spring.kafka.consumer.properties.spring.json.type.mapping=orderdtosend:com.esi.orderservice.dto.OrderDto
spring.kafka.consumer.enable-auto-commit=false
#  * means deserialize all.
spring.kafka.consumer.properties.spring.json.trusted.packages=*